{"mappings":"AAAA,MAAMA,EAAU,6BAEhB,SAASC,EAAcC,GACrB,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAEX,KAAM,CAAEC,KAAM,gBAAiBC,QAASJ,EAE5C,CC0BO,SAASK,EAAuBC,EAAYC,EAAeC,EAAMC,EAAW,aAAcC,GAAQ,GACrG,MAAMC,EAAcH,EAAKI,IAAIN,GAGhB,GAATI,IACFH,EAAcM,UAAY,IAE5BN,EAAcO,mBAAmBL,EAAUE,EAAYI,KAAK,IAC9D,CCxBF,SAASC,EAAWC,GAChB,MAAO,kBAAkBA,EAAQd,SAASc,EAAQC,IAAIC,OAAM,GAAI,aACpE,CAEA,SAASC,EAAYC,GACjB,MAAO,8BAA8BA,EAASlB,gBAAgBkB,EAASlB,mCACjDkB,EAASlB,SAASkB,EAASlB,KAAKmB,OAAO,GAAGC,cAAgBF,EAASlB,KAAKgB,MAAM,YACxG,CCtBA,MAAMK,EAAa,IHOJ,MAGXC,qBACI,MAAMC,QAAiBC,MAAM7B,EAAU,SAEvC,aADmBC,EAAc2B,IACrBE,OAChB,CAGAH,2BACE,MAAMC,QAAiBC,MAAM7B,EAAU,eAEvC,aADmBC,EAAc2B,IACrBE,OAChB,CAGEH,8BAA8BI,GAC1B,MAAMH,QAAiBC,MAAM7B,EAAU,cAAc+B,MAErD,aADmB9B,EAAc2B,IACrBI,eAChB,CAEAL,wBAAwBM,GACpB,MAAMC,QAAiBL,MAAM7B,EAAU,QAAQiC,MAE/C,aADmBhC,EAAciC,IACrBC,OAChB,CAGAR,sBAAsBS,GAClB,MAAMD,QAAgBN,MAAM7B,EAAU,mBAAmBoC,KAEzD,aADmBnC,EAAckC,IACrBL,OAChB,GGxCEO,EAAgBC,SAASC,cAAc,iBAC5B,IDsBF,MACXC,YAAYC,EAAYC,GACpBC,KAAKF,WAAaA,EAClBE,KAAKD,cAAgBA,CACzB,CAEAf,aAEIW,SAASC,cAAc,eAAeK,YAAc,sBAGpDN,SAASC,cAAc,gBAAgBK,aAAe,IAAIC,MAAOC,cAGjE,MAAMC,QAAwBJ,KAAKF,WAAWO,qBACxCC,QAAkBN,KAAKF,WAAWS,eDEvC,IAA4BC,EAAyBC,EAAMC,EAA/BF,ECzC1B,6lBA0CoCR,KAAKD,cDClC1B,mBAAmB,aAAcmC,GAG5CE,GACDA,EAASD,GCFP,MAAME,EAAoBhB,SAASC,cAAc,gBAC3CgB,EAAqBjB,SAASC,cAAc,cAGlDhC,EAAuBW,EAAYoC,EAAmBP,GACtDxC,EAAuBe,EAAaiC,EAAoBN,GAGxDX,SAASC,cAAc,YAAYiB,iBAAiB,SAAS,KACzDlB,SAASC,cAAc,iBAAiBxB,UAAY,EACnC,IAIrBuB,SAASC,cAAc,aAAaiB,iBAAiB,SAAS7B,UAC1DW,SAASC,cAAc,iBAAiBxB,UAAY,EACnC,GAIzB,GC/D0BW,EAAYW,GAEjCoB","sources":["src/js/ExternalServices.mjs","src/js/utils.mjs","src/js/HomePage.mjs","src/js/home-page.js"],"sourcesContent":["const baseURL = \"https://pokeapi.co/api/v2/\";\r\n\r\nfunction convertToJson(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  } else {\r\n    throw { name: 'servicesError', message: res };\r\n  }\r\n}\r\n\r\nexport default class ExternalServices {\r\n\r\n    // Get JSON of types (count,results->name[0]->url[1]):\r\n    async getPokeTypes() {\r\n        const response = await fetch(baseURL + \"type/\");\r\n        const data = await convertToJson(response);\r\n        return data.results;\r\n    }\r\n\r\n    // Get JSON of generations (count, results->name[0]->url[1]):\r\n    async getPokeGenerations() {\r\n      const response = await fetch(baseURL + \"generation/\");\r\n      const data = await convertToJson(response);\r\n      return data.results;\r\n  }\r\n\r\n    // Gets JSON (with pokemon_species->[6] and types->[7]) from given URL:\r\n    async getPokemonsByGeneration(genNumber) {\r\n        const response = await fetch(baseURL + `generation/${genNumber}/`);\r\n        const data = await convertToJson(response);\r\n        return data.pokemon_species;\r\n    }\r\n    // Gets JSON (with name->[5] and pokemon->[9]) from given URL:\r\n    async getPokemonsByType(type) {\r\n        const products = await fetch(baseURL + `type/${type}/`);\r\n        const data = await convertToJson(products);\r\n        return data.pokemon;\r\n    }\r\n\r\n    // Find a specific pokémon based on its ID:\r\n    async findPokemonById(id) {\r\n        const pokemon = await fetch(baseURL + `pokemon-species/${id}`);\r\n        const data = await convertToJson(pokemon);\r\n        return data.results;\r\n    }\r\n\r\n}\r\n","// retrieve data from localstorage\r\nexport function getLocalStorage(key) {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  }\r\n  export function setLocalStorage(key, data) {\r\n    let jsonData;\r\n    try {\r\n      jsonData = JSON.stringify(data);\r\n    } catch (e) {\r\n      console.error(`Error parsing data to JSON: ${e}`);\r\n      return;\r\n    }\r\n    localStorage.setItem(key, jsonData);\r\n  }\r\n  \r\n  \r\n  // set a listener for both touchend and click\r\n  export function setClick(selector, callback) {\r\n    qs(selector).addEventListener(\"touchend\", (event) => {\r\n      event.preventDefault();\r\n      callback();\r\n    });\r\n    qs(selector).addEventListener(\"click\", callback);\r\n  }\r\n//create new function getParam that will get the parameter from the URL\r\n\r\nexport function getParam(param){\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const pokemon = urlParams.get(param);\r\n  \r\n    return pokemon;\r\n  }\r\n  \r\nexport function renderListWithTemplate(templateFn, parentElement, list, position = \"afterbegin\", clear = false) {\r\n    const htmlStrings = list.map(templateFn);\r\n  \r\n    // if clear is true we need to clear out the contents of the parent.\r\n    if (clear == true) {\r\n      parentElement.innerHTML = \"\";\r\n    }\r\n    parentElement.insertAdjacentHTML(position, htmlStrings.join(\"\"));\r\n  }\r\n  \r\n  export function renderWithTemplate(template, parentElement, data, callback) {\r\n  \r\n    parentElement.insertAdjacentHTML(\"afterbegin\", template); \r\n    \r\n    //if there is a callback...call it and pass data\r\n    if(callback) {\r\n      callback(data);\r\n    }\r\n  }","import {renderListWithTemplate, renderWithTemplate} from \"./utils.mjs\";\r\n\r\nfunction homePageTemplate() {\r\n    return `<h1>Welcome to the Pokémon Generator!</h1>\r\n\r\n            <h2>Select Pokémons based on generation</h2>\r\n            <form id=\"generation-form\" name=\"gen-form\">\r\n                <label for=\"generations\">Generation:</label>\r\n                <select name=\"generations\" id=\"generations\" required></select>\r\n                <button id=\"gen-btn\" type=\"submit\">Show Pokemons!</button>\r\n            </form>\r\n\r\n            <h2>Select Pokémons based on type</h2>\r\n            <form id=\"type-form\" name=\"type-form\">\r\n                <button id=\"type-btn\" type=\"submit\">Show Pokemons!</button>\r\n            </form>`;\r\n}\r\n\r\nfunction genOptions(genJSON) {\r\n    return `<option value=\"${genJSON.name}\">${genJSON.url.slice(-2, -1)}</option>`;\r\n}\r\n\r\nfunction typeOptions(typeJSON) {\r\n    return `<input type=\"checkbox\" id=\"${typeJSON.name}\" value=\"${typeJSON.name}\">\r\n            <label for=\"${typeJSON.name}\">${typeJSON.name.charAt(0).toUpperCase() + typeJSON.name.slice(1)}</label>`;\r\n}\r\n\r\nexport default class HomePage {\r\n    constructor(dataSource, mainContainer) {\r\n        this.dataSource = dataSource;\r\n        this.mainContainer = mainContainer;\r\n    }\r\n\r\n    async init () {\r\n        // Fill the title with the name of the page:\r\n        document.querySelector(\".page-title\").textContent = \"Home Page | PokéGen\";\r\n\r\n        // Add footer year:\r\n        document.querySelector(\"#footer-year\").textContent =  new Date().getFullYear();\r\n        \r\n        // Await promise from dataSource:\r\n        const generationsList = await this.dataSource.getPokeGenerations();\r\n        const typesList = await this.dataSource.getPokeTypes();\r\n\r\n        //Render Home Page main:\r\n        renderWithTemplate(homePageTemplate(), this.mainContainer);\r\n\r\n        // Get the options parent elements:\r\n        const genOptionsElement = document.querySelector(\"#generations\");\r\n        const typeOptionsElement = document.querySelector(\"#type-form\");\r\n\r\n        // Render inner form elements:\r\n        renderListWithTemplate(genOptions, genOptionsElement, generationsList);\r\n        renderListWithTemplate(typeOptions, typeOptionsElement, typesList);\r\n\r\n        // Listen for click on the button:\r\n        document.querySelector(\"#gen-btn\").addEventListener(\"click\", () => {\r\n            document.querySelector(\".main-content\").innerHTML = \"\";\r\n            const category = \"generations\";\r\n        });\r\n\r\n        // Listen for click on the button:\r\n        document.querySelector(\"#type-btn\").addEventListener(\"click\", async () => {\r\n            document.querySelector(\".main-content\").innerHTML = \"\";\r\n            const category = \"types\";\r\n        });\r\n\r\n\r\n    }\r\n}","import ExternalServices from \"./ExternalServices.mjs\";\r\nimport HomePage from \"./HomePage.mjs\";\r\n\r\nconst dataSource = new ExternalServices();\r\nconst mainContainer = document.querySelector(\".main-content\");\r\nconst homePage = new HomePage(dataSource, mainContainer);\r\n\r\nhomePage.init();"],"names":["$0e5ca7fa55468ee1$var$baseURL","$0e5ca7fa55468ee1$var$convertToJson","res","ok","json","name","message","$2a0a9d2c002157bd$export$eb2ccaa622227397","templateFn","parentElement","list","position","clear","htmlStrings","map","innerHTML","insertAdjacentHTML","join","$848a6ca998f4c75f$var$genOptions","genJSON","url","slice","$848a6ca998f4c75f$var$typeOptions","typeJSON","charAt","toUpperCase","$b8070b0c4fe79aec$var$dataSource","async","response","fetch","results","genNumber","pokemon_species","type","products","pokemon","id","$b8070b0c4fe79aec$var$mainContainer","document","querySelector","constructor","dataSource","mainContainer","this","textContent","Date","getFullYear","generationsList","getPokeGenerations","typesList","getPokeTypes","template","data","callback","genOptionsElement","typeOptionsElement","addEventListener","init"],"version":3,"file":"index.b244b04c.js.map"}