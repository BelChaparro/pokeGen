const e="https://pokeapi.co/api/v2/";function t(e){if(e.ok)return e.json();throw{name:"servicesError",message:e}}function n(e){return JSON.parse(localStorage.getItem(e))}function o(e,t){let n;try{n=JSON.stringify(t)}catch(e){return void console.error(`Error parsing data to JSON: ${e}`)}localStorage.setItem(e,n)}function a(e,t,n,o="afterbegin",a=!1){const r=n.map(e);1==a&&(t.innerHTML=""),t.insertAdjacentHTML(o,r.join(""))}function r(e,t,n,o){t.insertAdjacentHTML("afterbegin",e),o&&o(n)}function i(e){return`<option value="${e.name}">${e.url.slice(-2,-1)}</option>`}function s(e){return`<input class="type" type="checkbox" id="${e.name}" value="${e.name}">\n            <label for="${e.name}">${e.name.charAt(0).toUpperCase()+e.name.slice(1)}</label>`}class c{constructor(e,t){this.dataSource=e,this.mainContainer=t}async init(){document.querySelector(".page-title").textContent="Home Page | PokéGen",document.querySelector("#footer-year").textContent=(new Date).getFullYear();const e=await this.dataSource.getPokeGenerations(),t=await this.dataSource.getPokeTypes();r('<h1>Welcome to the Pokémon Generator!</h1>\n\n            <h2>Select Pokémons based on generation</h2>\n            <form action="/poke-list" id="generation-form" name="gen-form">\n                <label for="generations">Generation:</label>\n                <select id="gen-select" required></select>\n                <button id="gen-btn" type="submit">Show Pokemons!</button>\n            </form>\n\n            <h2>Select Pokémons based on type</h2>\n            <form action="/poke-list" id="type-form" name="type-form">\n                <button id="type-btn" type="submit">Show Pokemons!</button>\n            </form>',this.mainContainer);const n=document.querySelector("#gen-select"),c=document.querySelector("#type-form");a(i,n,e),a(s,c,t),document.querySelector("#gen-btn").addEventListener("click",(e=>{e.preventDefault();var t=document.forms[0],n=t.checkValidity();if(t.reportValidity(),n){const e=document.getElementById("gen-select").options[document.getElementById("gen-select").selectedIndex].text;o("category","generations"),o("generation",`${e}`)}})),document.querySelector("#type-btn").addEventListener("click",(e=>{e.preventDefault();var t=document.forms[0],n=t.checkValidity();t.reportValidity(),n&&(!function(){let e=document.querySelectorAll(".type"),t=[];for(let n=0;n<e.length;n++)if(1==e[n].checked){let o=e[n].value;t.push(o)}o("types",t)}(),o("category","types"))}))}}function l(e){return`<li class="pokemon-card">\n                <a href="#">\n                    <img src="${e}" alt="Image of ${e}"/>\n                    <h3 class="poke-name">${e}</h3>\n                    <ul class="poke-general">\n                        <p class="poke-color">${e}</p>\n                        <p class="poke-type">${e}</p>\n                        <p class="poke-growth">${e}</p>\n                    </ul>\n                </a>\n            </li>`}class u{constructor(e,t){this.dataSource=e,this.mainContainer=t,this.category=n("category"),this.pokeList=[]}async init(){var e;r(`<h1>Pokémon List by ${e=this.category}</h1>\n            <h2>These are the pokémons that were introduced in the selected ${e}</h2>\n            <ul class="poke-list"></ul>`,this.mainContainer),document.querySelector(".page-title").textContent=`Pokémon List by ${this.category} | PokéGen`;let t=n("generation");console.log(t);const o=this.dataSource.getPokemonsByGeneration(t);a(l,this.listElement,o,"afterbegin")}}const m=document.querySelector(".main-content");m.innerHtml="";!function(e,t){function n(n){switch(n){case"/home-page":t.innerHtml="";new c(e,t).init();break;case"/poke-list":t.innerHtml="";new u(e,t).init();break;case"/page3":t.innerHtml="";break;default:t.innerHtml="",updateView(createElement("h3",{textContent:"404 Page Not Found"}))}}n(window.location.hash||"/home-page"),window.addEventListener("hashchange",(e=>{n(new URL(e.newURL).hash)}))}(new class{async getPokeTypes(){const n=await fetch(e+"type/");return(await t(n)).results}async getPokeGenerations(){const n=await fetch(e+"generation/");return(await t(n)).results}async getPokemonsByGeneration(n){const o=await fetch(e+`generation/${n}/`);return(await t(o)).pokemon_species}async getPokemonsByType(n){const o=await fetch(e+`type/${n}/`);return(await t(o)).pokemon}async findPokemonById(n){const o=await fetch(e+`pokemon-species/${n}`);return(await t(o)).results}},m);
//# sourceMappingURL=index.3a76f96c.js.map
