{"mappings":"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","sources":["src/js/ExternalServices.mjs","src/js/utils.mjs","src/js/HomePage.mjs","src/js/PokeList.mjs","src/js/router.js"],"sourcesContent":["const baseURL = \"https://pokeapi.co/api/v2/\";\r\n\r\nfunction convertToJson(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  } else {\r\n    throw { name: 'servicesError', message: res };\r\n  }\r\n}\r\n\r\nexport default class ExternalServices {\r\n\r\n    // Get JSON of types (count,results->name[0]->url[1]):\r\n    async getPokeTypes() {\r\n        const response = await fetch(baseURL + \"type/\");\r\n        const data = await convertToJson(response);\r\n        return data.results;\r\n    }\r\n\r\n    // Get JSON of generations (count, results->name[0]->url[1]):\r\n    async getPokeGenerations() {\r\n      const response = await fetch(baseURL + \"generation/\");\r\n      const data = await convertToJson(response);\r\n      return data.results;\r\n  }\r\n\r\n    // Gets JSON (with pokemon_species->[6] and types->[7]) from given URL:\r\n    async getPokemonsByGeneration(genNumber) {\r\n        const response = await fetch(baseURL + `generation/${genNumber}/`);\r\n        const data = await convertToJson(response);\r\n        return data.pokemon_species;\r\n    }\r\n    // Gets JSON (with name->[5] and pokemon->[9]) from given URL:\r\n    async getPokemonsByType(type) {\r\n        const products = await fetch(baseURL + `type/${type}/`);\r\n        const data = await convertToJson(products);\r\n        return data.pokemon;\r\n    }\r\n\r\n    // Find a specific pokémon based on its ID:\r\n    async findPokemonById(id) {\r\n        const pokemon = await fetch(baseURL + `pokemon-species/${id}`);\r\n        const data = await convertToJson(pokemon);\r\n        return data.results;\r\n    }\r\n\r\n}\r\n","// retrieve data from localstorage\r\nexport function getLocalStorage(key) {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  }\r\n  export function setLocalStorage(key, data) {\r\n    let jsonData;\r\n    try {\r\n      jsonData = JSON.stringify(data);\r\n    } catch (e) {\r\n      console.error(`Error parsing data to JSON: ${e}`);\r\n      return;\r\n    }\r\n    localStorage.setItem(key, jsonData);\r\n  }\r\n  \r\n  \r\n  // set a listener for both touchend and click\r\n  export function setClick(selector, callback) {\r\n    qs(selector).addEventListener(\"touchend\", (event) => {\r\n      event.preventDefault();\r\n      callback();\r\n    });\r\n    qs(selector).addEventListener(\"click\", callback);\r\n  }\r\n//create new function getParam that will get the parameter from the URL\r\n\r\nexport function getParam(param){\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const pokemon = urlParams.get(param);\r\n  \r\n    return pokemon;\r\n  }\r\n  \r\nexport function renderListWithTemplate(templateFn, parentElement, list, position = \"afterbegin\", clear = false) {\r\n    const htmlStrings = list.map(templateFn);\r\n  \r\n    // if clear is true we need to clear out the contents of the parent.\r\n    if (clear == true) {\r\n      parentElement.innerHTML = \"\";\r\n    }\r\n    parentElement.insertAdjacentHTML(position, htmlStrings.join(\"\"));\r\n  }\r\n  \r\n  export function renderWithTemplate(template, parentElement, data, callback) {\r\n  \r\n    parentElement.insertAdjacentHTML(\"afterbegin\", template); \r\n    \r\n    //if there is a callback...call it and pass data\r\n    if(callback) {\r\n      callback(data);\r\n    }\r\n  }","import {renderListWithTemplate, renderWithTemplate, setLocalStorage} from \"./utils.mjs\";\r\nimport { initRouter } from \"./router.js\";\r\n\r\nfunction homePageTemplate() {\r\n    return `<h1>Welcome to the Pokémon Generator!</h1>\r\n\r\n            <h2>Select Pokémons based on generation</h2>\r\n            <form action=\"/poke-list\" id=\"generation-form\" name=\"gen-form\">\r\n                <label for=\"generations\">Generation:</label>\r\n                <select id=\"gen-select\" required></select>\r\n                <button id=\"gen-btn\" type=\"submit\">Show Pokemons!</button>\r\n            </form>\r\n\r\n            <h2>Select Pokémons based on type</h2>\r\n            <form action=\"/poke-list\" id=\"type-form\" name=\"type-form\">\r\n                <button id=\"type-btn\" type=\"submit\">Show Pokemons!</button>\r\n            </form>`;\r\n}\r\n\r\nfunction genOptions(genJSON) {\r\n    return `<option value=\"${genJSON.name}\">${genJSON.url.slice(-2, -1)}</option>`;\r\n}\r\n\r\nfunction typeOptions(typeJSON) {\r\n    return `<input class=\"type\" type=\"checkbox\" id=\"${typeJSON.name}\" value=\"${typeJSON.name}\">\r\n            <label for=\"${typeJSON.name}\">${typeJSON.name.charAt(0).toUpperCase() + typeJSON.name.slice(1)}</label>`;\r\n}\r\n\r\nfunction getCheckedTypes() {\r\n    let types = document.querySelectorAll(\".type\");\r\n    let typesChecked = [];\r\n    for (let i = 0; i < types.length; i++) {\r\n        if (types[i].checked == true){\r\n            let type = types[i].value;\r\n            typesChecked.push(type);\r\n          }\r\n    }\r\n    setLocalStorage(\"types\", typesChecked);\r\n}\r\nexport default class HomePage {\r\n    constructor(dataSource, mainContainer) {\r\n        this.dataSource = dataSource;\r\n        this.mainContainer = mainContainer;\r\n    }\r\n\r\n    async init () {\r\n        // Fill the title with the name of the page:\r\n        document.querySelector(\".page-title\").textContent = \"Home Page | PokéGen\";\r\n\r\n        // Add footer year:\r\n        document.querySelector(\"#footer-year\").textContent =  new Date().getFullYear();\r\n        \r\n        // Await promise from dataSource:\r\n        const generationsList = await this.dataSource.getPokeGenerations();\r\n        const typesList = await this.dataSource.getPokeTypes();\r\n\r\n        //Render Home Page main:\r\n        renderWithTemplate(homePageTemplate(), this.mainContainer);\r\n\r\n        // Get the options parent elements:\r\n        const genOptionsElement = document.querySelector(\"#gen-select\");\r\n        const typeOptionsElement = document.querySelector(\"#type-form\");\r\n\r\n        // Render inner form elements:\r\n        renderListWithTemplate(genOptions, genOptionsElement, generationsList);\r\n        renderListWithTemplate(typeOptions, typeOptionsElement, typesList);\r\n\r\n        // Listen for click on the button:\r\n        document.querySelector(\"#gen-btn\").addEventListener(\"click\", () => {\r\n            setLocalStorage(\"category\", \"generation\");\r\n            const generation = document.getElementById(\"gen-select\").options[document.getElementById(\"gen-select\").selectedIndex].text;\r\n            setLocalStorage(\"generation\", `${generation}`);\r\n        });\r\n\r\n        // Listen for click on the button:\r\n        document.querySelector(\"#type-btn\").addEventListener(\"click\", () => {\r\n            setLocalStorage(\"generation\", \"\");\r\n            setLocalStorage(\"category\", \"types\");\r\n            getCheckedTypes();\r\n\r\n        });\r\n    }\r\n}","import { renderWithTemplate, renderListWithTemplate, getLocalStorage } from \"./utils.mjs\";\r\n\r\nfunction pokeListMainTemplate(category) {\r\n    return `<h1>Pokémon List by ${category}</h1>\r\n            <h2>These are the pokémons that were introduced in the selected ${category}</h2>\r\n            <ul class=\"poke-list\"></ul>`;\r\n}\r\n\r\nfunction pokemonListCardTemplate(pokemon) {\r\n    return `<li class=\"pokemon-card\">\r\n                <a href=\"#\">\r\n                    <img src=\"${pokemon}\" alt=\"Image of ${pokemon}\"/>\r\n                    <h3 class=\"poke-name\">${pokemon}</h3>\r\n                    <ul class=\"poke-general\">\r\n                        <p class=\"poke-color\">${pokemon}</p>\r\n                        <p class=\"poke-type\">${pokemon}</p>\r\n                        <p class=\"poke-growth\">${pokemon}</p>\r\n                    </ul>\r\n                </a>\r\n            </li>`\r\n}\r\n\r\nexport default class PokemonList {\r\n    constructor(dataSource, mainContainer, category) {\r\n        this.dataSource = dataSource;\r\n        this.mainContainer = mainContainer;\r\n        this.category = category;\r\n        this.pokeList = [];\r\n    }\r\n\r\n    async init() {\r\n    //Render PokeList main:\r\n    renderWithTemplate(pokeListMainTemplate(this.category), this.mainContainer);\r\n\r\n    // Fill the title with the name of the page:\r\n    document.querySelector(\".page-title\").textContent = `Pokémon List by ${this.category} | PokéGen`;\r\n\r\n    // Listening for click on the generation form button:\r\n\r\n    let generation = getLocalStorage(\"generation\");\r\n    console.log(generation);\r\n    const genList = this.dataSource.getPokemonsByGeneration(generation);\r\n    // Render the list:\r\n    renderListWithTemplate(pokemonListCardTemplate, this.listElement, list, \"afterbegin\");\r\n\r\n    }\r\n\r\n}\r\n","import ExternalServices from \"./ExternalServices.mjs\";\r\nimport HomePage from \"./HomePage.mjs\";\r\nimport PokemonList from \"./PokeList.mjs\";\r\n\r\nconst mainContainer = document.querySelector(\".main-content\");\r\nconst dataSource = new ExternalServices();\r\ninitRouter(dataSource, mainContainer);\r\n\r\nexport function initRouter(dataSource, mainContainer) {\r\n\r\n    function hashToRoute(hash) {\r\n        switch(hash) {\r\n            case \"/home-page\":\r\n                // Delete previous main content:\r\n                mainContainer.innerHtml = \"\";\r\n                const homePage = new HomePage(dataSource, mainContainer);\r\n                homePage.init();\r\n\r\n                break;\r\n\r\n            case \"/poke-list\":\r\n                // Delete previous main content:\r\n                mainContainer.innerHtml = \"\";\r\n                const pokeList = new PokemonList(dataSource, mainContainer);\r\n                pokeList.init();\r\n\r\n                break;\r\n\r\n            case \"/page3\":\r\n                // Delete previous main content:\r\n                mainContainer.innerHtml = \"\";\r\n\r\n                break;\r\n\r\n            default:\r\n                // Delete previous main content:\r\n                mainContainer.innerHtml = \"\";\r\n                updateView(createElement(\"h3\",  {textContent: \"404 Page Not Found\"}));\r\n                break;\r\n        }\r\n    }\r\n\r\n    const defaultHash = window.location.hash || \"/home-page\";\r\n    hashToRoute(defaultHash);\r\n\r\n    window.addEventListener(\"hashchange\", e => {\r\n        const newUrl = new URL(e.newUrl);\r\n        hash = newUrl.hash;\r\n\r\n        hashToRoute(hash);\r\n    })\r\n}"],"names":["$0e5ca7fa55468ee1$var$baseURL","$0e5ca7fa55468ee1$var$convertToJson","res","ok","json","name","message","$2a0a9d2c002157bd$export$1f73f60bdb811cb1","key","data","jsonData","JSON","stringify","e","console","error","localStorage","setItem","$2a0a9d2c002157bd$export$eb2ccaa622227397","templateFn","parentElement","list","position","clear","htmlStrings","map","innerHTML","insertAdjacentHTML","join","$2a0a9d2c002157bd$export$16b3ba5fff8817e","template","callback","$848a6ca998f4c75f$var$genOptions","genJSON","url","slice","$848a6ca998f4c75f$var$typeOptions","typeJSON","charAt","toUpperCase","$848a6ca998f4c75f$export$2e2bcd8739ae039","constructor","dataSource","mainContainer","this","async","document","querySelector","textContent","Date","getFullYear","generationsList","getPokeGenerations","typesList","getPokeTypes","genOptionsElement","typeOptionsElement","addEventListener","getElementById","options","selectedIndex","text","types","querySelectorAll","typesChecked","i","length","checked","type","value","push","$848a6ca998f4c75f$var$getCheckedTypes","$25f5ac3f1e6530c9$var$pokemonListCardTemplate","pokemon","$25f5ac3f1e6530c9$export$2e2bcd8739ae039","category","pokeList","generation","parse","getItem","log","getPokemonsByGeneration","listElement","$3e27a66f4ef69c2e$var$mainContainer","hashToRoute","hash1","innerHtml","init","updateView","createElement","window","location","hash","newUrl","URL","$3e27a66f4ef69c2e$export$cf7ee87ede64229c","response","fetch","results","genNumber","pokemon_species","products","id"],"version":3,"file":"index.5a28cad6.js.map"}